{"version":3,"sources":["../../../src/basic/Spinner.js"],"names":["Spinner","variables","context","theme","variable","_root","c","props","color","inverse","inverseSpinnerColor","defaultSpinnerColor","size","Component","contextTypes","PropTypes","object","propTypes","ActivityIndicator","string","bool","StyledSpinner","mapPropsToStyleNames"],"mappings":"21BAAA,4B,2CACA,qC,mDACA,yCAEA,iEACA,qD,iDACA,mE,68BAEMA,Q,mRAIK,iBACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CAAqB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAtE,CAAkFG,kBAApG,CACA,MACD,+BAAC,8BAAD,WACC,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADN,EAEK,KAAKC,KAFV,EAGC,MACC,KAAKA,KAAL,CAAWC,KAAX,CACG,KAAKD,KAAL,CAAWC,KADd,CAEG,KAAKD,KAAL,CAAWE,OAAX,CAAqBR,UAAUS,mBAA/B,CAAqDT,UAAUU,mBANpE,CAQC,KAAM,KAAKJ,KAAL,CAAWK,IAAX,CAAkB,KAAKL,KAAL,CAAWK,IAA7B,CAAoC,OAR3C,kDADC,CAYD,C,qBAlBmBC,gB,EAAhBb,O,CACGc,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C,CAoBxBhB,QAAQiB,SAAR,aACKC,+BAAkBD,SADvB,EAEET,MAAOO,oBAAUI,MAFnB,CAGEV,QAASM,oBAAUK,IAHrB,GAMA,GAAMC,eAAgB,yCAAa,oBAAb,CAAmC,EAAnC,CAAuCC,8BAAvC,EAA6DtB,OAA7D,CAAtB,C,QAE0BA,O,CAAjBqB,a","file":"Spinner.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport variable from \"../theme/variables/platform\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass Spinner extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object,\r\n  };\r\n  render() {\r\n    const variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\r\n    return (\r\n\t\t\t<ActivityIndicator\r\n\t\t\t\tref={c => (this._root = c)}\r\n\t\t\t\t{...this.props}\r\n\t\t\t\tcolor={\r\n\t\t\t\t\tthis.props.color\r\n\t\t\t\t\t\t? this.props.color\r\n\t\t\t\t\t\t: this.props.inverse ? variables.inverseSpinnerColor : variables.defaultSpinnerColor\r\n\t\t\t\t}\r\n\t\t\t\tsize={this.props.size ? this.props.size : \"large\"}\r\n\t\t\t/>\r\n    );\r\n  }\r\n}\r\n\r\nSpinner.propTypes = {\r\n  ...ActivityIndicator.propTypes,\r\n  color: PropTypes.string,\r\n  inverse: PropTypes.bool,\r\n};\r\n\r\nconst StyledSpinner = connectStyle(\"NativeBase.Spinner\", {}, mapPropsToStyleNames)(Spinner);\r\n\r\nexport { StyledSpinner as Spinner };\r\n"]}