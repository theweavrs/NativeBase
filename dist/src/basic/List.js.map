{"version":3,"sources":["../../../src/basic/List.js"],"names":["List","props","_rows","openCellId","dataArray","renderRow","rowHasChanged","r1","r2","ds","ListView","DataSource","state","dataSource","cloneWithRows","nextProps","setState","childrenArray","React","Children","map","children","child","enable","_listView","setNativeProps","scrollEnabled","_root","closeRow","id","closeOnRowBeginSwipe","safeCloseOpenRow","secId","rowId","rowMap","cellIdentifier","onRowOpen","closeOnRowPress","openLeftRow","openRightRow","e","closeOnScroll","onScroll","ref","listViewRef","rowData","previewRowId","getRowIDForFlatIndex","previewRowIndex","row","rowSwipeGestureBegan","onRowDidOpen","onRowClose","onRowDidClose","onRowPress","setScrollEnabled","leftOpenValue","rightOpenValue","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","recalculateHiddenLayout","swipeRowStyle","previewFirstRow","previewDuration","previewOpenValue","tension","friction","directionalDistanceChangeThreshold","swipeToOpenPercent","renderLeftHiddenRow","renderRightHiddenRow","setRefs","c","renderChildren","Component","defaultProps","StyledList","mapPropsToStyleNames"],"mappings":"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","file":"List.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ListView, View } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\n\r\nimport { SwipeRow } from \"./SwipeRow\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass List extends Component {\r\n  static defaultProps = {\r\n    leftOpenValue: 0,\r\n    rightOpenValue: 0,\r\n    closeOnRowBeginSwipe: false,\r\n    closeOnScroll: true,\r\n    closeOnRowPress: true,\r\n    disableLeftSwipe: false,\r\n    disableRightSwipe: false,\r\n    recalculateHiddenLayout: false,\r\n    previewFirstRow: false,\r\n    directionalDistanceChangeThreshold: 2,\r\n    swipeToOpenPercent: 50\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this._rows = {};\r\n    this.openCellId = null;\r\n    if (props.dataArray && props.renderRow) {\r\n      let rowHasChanged = props.rowHasChanged || ((r1, r2) => r1 !== r2);\r\n      const ds = new ListView.DataSource({ rowHasChanged: rowHasChanged });\r\n      this.state = {\r\n        dataSource: ds.cloneWithRows(props.dataArray)\r\n      };\r\n    } else {\r\n      this.state = {};\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.dataSource) {\r\n      this.setState({\r\n        dataSource: this.state.dataSource.cloneWithRows(nextProps.dataArray)\r\n      });\r\n    }\r\n  }\r\n  renderChildren() {\r\n    const childrenArray = React.Children.map(\r\n      this.props.children,\r\n      child => child\r\n    );\r\n\r\n    return childrenArray;\r\n  }\r\n  setScrollEnabled(enable) {\r\n    this._listView.setNativeProps({ scrollEnabled: enable });\r\n  }\r\n\r\n  safeCloseOpenRow() {\r\n    // if the openCellId is stale due to deleting a row this could be undefined\r\n    if (this._rows[this.openCellId]._root) {\r\n      this._rows[this.openCellId]._root.closeRow();\r\n    }\r\n  }\r\n\r\n  rowSwipeGestureBegan(id) {\r\n    if (\r\n      this.props.closeOnRowBeginSwipe &&\r\n      this.openCellId &&\r\n      this.openCellId !== id\r\n    ) {\r\n      this.safeCloseOpenRow();\r\n    }\r\n  }\r\n\r\n  onRowOpen(secId, rowId, rowMap) {\r\n    const cellIdentifier = `${secId}${rowId}`;\r\n    if (this.openCellId && this.openCellId !== cellIdentifier) {\r\n      this.safeCloseOpenRow();\r\n    }\r\n    this.openCellId = cellIdentifier;\r\n    this.props.onRowOpen && this.props.onRowOpen(secId, rowId, rowMap);\r\n  }\r\n\r\n  onRowPress(id) {\r\n    if (this.openCellId) {\r\n      if (this.props.closeOnRowPress) {\r\n        this.safeCloseOpenRow();\r\n        this.openCellId = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  closeRow(id) {\r\n    if (this.openCellId) {\r\n      if (this.props.closeOnRowPress) {\r\n        this.safeCloseOpenRow();\r\n        this.openCellId = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  openLeftRow(id) {\r\n    this._rows[id]._root.openLeftRow();\r\n  }\r\n\r\n  openRightRow(id) {\r\n    this._rows[id]._root.openRightRow();\r\n  }\r\n\r\n  onScroll(e) {\r\n    if (this.openCellId) {\r\n      if (this.props.closeOnScroll) {\r\n        this.safeCloseOpenRow();\r\n        this.openCellId = null;\r\n      }\r\n    }\r\n    this.props.onScroll && this.props.onScroll(e);\r\n  }\r\n\r\n  setRefs(ref) {\r\n    this._listView = ref;\r\n    this.props.listViewRef && this.props.listViewRef(ref);\r\n  }\r\n\r\n  renderRow(rowData, secId, rowId, rowMap) {\r\n    const previewRowId =\r\n      this.props.dataSource &&\r\n      this.props.dataSource.getRowIDForFlatIndex(\r\n        this.props.previewRowIndex || 0\r\n      );\r\n    return (\r\n      <SwipeRow\r\n        list={true}\r\n        ref={row => (this._rows[`${secId}${rowId}`] = row)}\r\n        swipeGestureBegan={_ => this.rowSwipeGestureBegan(`${secId}${rowId}`)}\r\n        onRowOpen={_ => this.onRowOpen(secId, rowId, this._rows)}\r\n        onRowDidOpen={_ =>\r\n          this.props.onRowDidOpen &&\r\n          this.props.onRowDidOpen(secId, rowId, this._rows)\r\n        }\r\n        onRowClose={_ =>\r\n          this.props.onRowClose &&\r\n          this.props.onRowClose(secId, rowId, this._rows)\r\n        }\r\n        onRowDidClose={_ =>\r\n          this.props.onRowDidClose &&\r\n          this.props.onRowDidClose(secId, rowId, this._rows)\r\n        }\r\n        onRowPress={_ => this.onRowPress(`${secId}${rowId}`)}\r\n        openLeftRow={_ => this.openLeftRow(`${secId}${rowId}`)}\r\n        openRightRow={_ => this.openRightRow(`${secId}${rowId}`)}\r\n        closeRow={_ => this.closeRow(`${secId}${rowId}`)}\r\n        setScrollEnabled={enable => this.setScrollEnabled(enable)}\r\n        leftOpenValue={this.props.leftOpenValue}\r\n        rightOpenValue={this.props.rightOpenValue}\r\n        closeOnRowPress={this.props.closeOnRowPress}\r\n        disableLeftSwipe={this.props.disableLeftSwipe}\r\n        disableRightSwipe={this.props.disableRightSwipe}\r\n        stopLeftSwipe={this.props.stopLeftSwipe}\r\n        stopRightSwipe={this.props.stopRightSwipe}\r\n        recalculateHiddenLayout={this.props.recalculateHiddenLayout}\r\n        style={this.props.swipeRowStyle}\r\n        preview={\r\n          (this.props.previewFirstRow || this.props.previewRowIndex) &&\r\n          rowId === previewRowId\r\n        }\r\n        previewDuration={this.props.previewDuration}\r\n        previewOpenValue={this.props.previewOpenValue}\r\n        tension={this.props.tension}\r\n        friction={this.props.friction}\r\n        directionalDistanceChangeThreshold={\r\n          this.props.directionalDistanceChangeThreshold\r\n        }\r\n        swipeToOpenPercent={this.props.swipeToOpenPercent}\r\n        left={\r\n          this.props.renderLeftHiddenRow &&\r\n          this.props.renderLeftHiddenRow(rowData, secId, rowId, this._rows)\r\n        }\r\n        right={\r\n          this.props.renderRightHiddenRow &&\r\n          this.props.renderRightHiddenRow(rowData, secId, rowId, this._rows)\r\n        }\r\n        body={\r\n          this.props.renderRow &&\r\n          this.props.renderRow(rowData, secId, rowId, this._rows)\r\n        }\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    if (this.props.renderLeftHiddenRow || this.props.renderRightHiddenRow) {\r\n      return (\r\n        <ListView\r\n          {...this.props}\r\n          ref={ref => {\r\n            this.setRefs(ref);\r\n            this._root = ref;\r\n          }}\r\n          enableEmptySections\r\n          onScroll={e => this.onScroll(e)}\r\n          renderRow={(rowData, secId, rowId) =>\r\n            this.renderRow(rowData, secId, rowId, this._rows)\r\n          }\r\n        />\r\n      );\r\n    } else if (this.state.dataSource) {\r\n      return (\r\n        <ListView\r\n          {...this.props}\r\n          ref={ref => (this._root = ref)}\r\n          enableEmptySections\r\n          dataSource={this.state.dataSource}\r\n          renderRow={this.props.renderRow}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <View ref={c => (this._root = c)} {...this.props}>\r\n        {this.renderChildren()}\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst StyledList = connectStyle(\"NativeBase.List\", {}, mapPropsToStyleNames)(\r\n  List\r\n);\r\n\r\nexport { StyledList as List };"]}