{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","dataSource","getChildren","children","nextProps","nextLabel","currentDS","nextDS","setState","picker","pickerItem","visible","defaultProps","style","getInitialStyle","itemStyle","item","_","find","child","value","selectedValue","get","Array","isArray","concat","apply","React","cloneElement","iosIcon","fontSize","lineHeight","onPress","enabled","undefined","_setModalVisible","text","placeholder","renderButton","selectedItem","getSelectedItem","textStyle","width","Dimensions","note","placeholderStyle","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","marginLeft","headerBackButtonStyle","headerBackButtonTextStyle","headerBackButtonText","headerTitleStyle","iosHeader","_root","c","modalStyle","index","String","onValueChange","current","label","itemTextStyle","Component","Item","render","propTypes","ViewPropTypes","PropTypes","func","StyledPickerNB","mapPropsToStyleNames"],"mappings":"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","file":"Picker.ios.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport createReactClass from \"create-react-class\";\r\nimport { Picker, Modal, View, ViewPropTypes, FlatList, Dimensions } from \"react-native\";\r\nimport _ from \"lodash\";\r\nimport { Text } from \"./Text\";\r\nimport { List } from \"./List\";\r\nimport { IconNB as Icon } from \"./IconNB\";\r\nimport { Radio } from \"./Radio\";\r\nimport { Container } from \"./Container\";\r\nimport { ListItem } from \"./ListItem\";\r\nimport { Button } from \"./Button\";\r\nimport { Header } from \"./Header\";\r\nimport { Title } from \"./Title\";\r\nimport { Left } from \"./Left\";\r\nimport { Right } from \"./Right\";\r\nimport { Body } from \"./Body\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport computeProps from \"../utils/computeProps\";\r\n\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass PickerNB extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalVisible: false,\r\n      currentLabel: this.getLabel(props),\r\n      dataSource: this.getChildren(props.children)\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const currentLabel = this.state.currentLabel;\r\n    const nextLabel = this.getLabel(nextProps);\r\n    const currentDS = this.state.dataSource;\r\n    const nextDS = this.getChildren(nextProps.children);\r\n\r\n    if (currentLabel !== nextLabel) {\r\n      this.setState({\r\n        currentLabel: nextLabel\r\n      });\r\n    }\r\n    if (currentDS !== nextDS) {\r\n      this.setState({\r\n        dataSource: nextDS\r\n      });\r\n    }\r\n  }\r\n\r\n  getInitialStyle() {\r\n    return {\r\n      picker: {\r\n        // alignItems: 'flex-end'\r\n      },\r\n      pickerItem: {}\r\n    };\r\n  }\r\n  _setModalVisible(visible) {\r\n    this.setState({ modalVisible: visible });\r\n  }\r\n\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      style: this.getInitialStyle().picker,\r\n      itemStyle: this.getInitialStyle().pickerItem\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n\r\n  getLabel(props) {\r\n    let children = this.getChildren(props.children);\r\n    const item = _.find(\r\n      children,\r\n      child => child.props.value === props.selectedValue\r\n    );\r\n    return _.get(item, \"props.label\");\r\n  }\r\n\r\n  getSelectedItem() {\r\n    return _.find(\r\n      this.props.children,\r\n      child => child.props.value === this.props.selectedValue\r\n    );\r\n  }\r\n\r\n  getChildren(children) {\r\n    if (children && !Array.isArray(children)) {\r\n      return [].concat(children);\r\n    }\r\n    children = [].concat.apply([], children)\r\n    return children;\r\n  }\r\n\r\n  renderIcon() {\r\n    return React.cloneElement(this.props.iosIcon, {\r\n      style: [\r\n        {\r\n          fontSize: 22,\r\n          lineHeight: 26\r\n        },\r\n        { ...this.props.iosIcon.props.style }\r\n      ]\r\n    });\r\n  }\r\n\r\n  renderButton() {\r\n    const onPress = () => {\r\n      if (this.props.enabled !== undefined && !this.props.enabled) return;\r\n      this._setModalVisible(true);\r\n    };\r\n    const text = this.state.currentLabel\r\n      ? this.state.currentLabel\r\n      : this.props.placeholder;\r\n    if (this.props.renderButton) {\r\n      return this.props.renderButton({\r\n        onPress,\r\n        text,\r\n        picker: this,\r\n        selectedItem: this.getSelectedItem()\r\n      });\r\n    }\r\n    return (\r\n      <Button\r\n        style={this.props.style}\r\n        dark\r\n        picker\r\n        transparent\r\n        onPress={onPress}\r\n      >\r\n        {this.state.currentLabel ? (\r\n          <Text style={[this.props.textStyle, { width: Dimensions.get(\"window\").width - 50 }]} note={this.props.note} numberOfLines={1} ellipsizeMode=\"tail\">\r\n            {this.state.currentLabel}\r\n          </Text>\r\n        ) : (\r\n            <Text\r\n              style={[this.props.textStyle, this.props.placeholderStyle, { width: Dimensions.get(\"window\").width - 50 }]}\r\n              note={this.props.note === false ? false : true}\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\"\r\n            >\r\n              {this.props.placeholder}\r\n            </Text>\r\n          )}\r\n        {this.props.iosIcon === undefined ? null : this.renderIcon()}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    return this.props.renderHeader ? (\r\n      this.props.renderHeader(() => this._setModalVisible(false))\r\n    ) : (\r\n        <Header style={this.props.headerStyle}>\r\n          <Left>\r\n            <Button\r\n              style={{\r\n                shadowOffset: null,\r\n                shadowColor: null,\r\n                shadowRadius: null,\r\n                shadowOpacity: null,\r\n                marginLeft: 3,\r\n                ...this.props.headerBackButtonStyle\r\n              }}\r\n              transparent\r\n              onPress={() => {\r\n                this._setModalVisible(false);\r\n              }}\r\n            >\r\n              <Text style={this.props.headerBackButtonTextStyle}>\r\n                {this.props.headerBackButtonText || \"Back\"}\r\n              </Text>\r\n            </Button>\r\n          </Left>\r\n          <Body>\r\n            <Title style={this.props.headerTitleStyle}>\r\n              {this.props.iosHeader || \"Select One\"}\r\n            </Title>\r\n          </Body>\r\n          <Right />\r\n        </Header>\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View ref={c => (this._root = c)}>\r\n        {this.renderButton()}\r\n        <Modal\r\n          // supportedOrientations={this.props.supportedOrientations || null}\r\n          supportedOrientations={['portrait', 'landscape']}\r\n          animationType=\"slide\"\r\n          transparent={false}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={() => {\r\n            this._setModalVisible(false);\r\n          }}\r\n        >\r\n          <Container style={this.props.modalStyle}>\r\n            {this.renderHeader()}\r\n            <FlatList\r\n              data={this.state.dataSource}\r\n              keyExtractor={(item, index) => String(index)}\r\n              renderItem={({ item }) => (\r\n                <ListItem\r\n                  selected={item.props.value === this.props.selectedValue}\r\n                  button\r\n                  style={this.props.itemStyle}\r\n                  onPress={() => {\r\n                    this._setModalVisible(false);\r\n                    this.props.onValueChange(item.props.value);\r\n                    this.setState({ current: item.props.label });\r\n                  }}\r\n                >\r\n                  <Left>\r\n                    <Text style={this.props.itemTextStyle}>\r\n                      {item.props.label}\r\n                    </Text>\r\n                  </Left>\r\n                  <Right>\r\n                    {item.props.value === this.props.selectedValue ? (\r\n                      <Radio selected />\r\n                    ) : (\r\n                        <Radio selected={false} />\r\n                      )}\r\n                  </Right>\r\n                </ListItem>\r\n              )}\r\n            />\r\n          </Container>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nPickerNB.Item = createReactClass({\r\n  render() {\r\n    return <Picker.Item {...this.props()} />;\r\n  }\r\n});\r\n\r\nPickerNB.propTypes = {\r\n  ...ViewPropTypes,\r\n  renderButton: PropTypes.func\r\n};\r\n\r\nconst StyledPickerNB = connectStyle(\r\n  \"NativeBase.PickerNB\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(PickerNB);\r\n\r\nexport { StyledPickerNB as PickerNB };\r\n"]}