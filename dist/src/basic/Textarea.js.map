{"version":3,"sources":["../../../src/basic/Textarea.js"],"names":["Textarea","textarea","height","props","rowSpan","defaultProps","style","getStyle","_textInput","c","_root","prepareRootProps","placeholderTextColor","variables","inputColorPlaceholder","disabled","Component","propTypes","TextInput","PropTypes","oneOfType","object","number","array","bordered","bool","underline","StyledTextarea","mapPropsToStyleNames"],"mappings":"61BAAA,4B,2CACA,qC,mDACA,yCACA,iEACA,qD,iDACA,mD,yDACA,mE,68BAEMA,S,6RACO,CACT,MAAO,CACLC,SAAU,CACRC,OAAQ,KAAKC,KAAL,CAAWC,OAAX,CAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAqB,EAA1C,CAA+C,EAD/C,CADL,CAAP,CAKD,C,2DAEkB,CACjB,GAAMC,cAAe,CACnBC,MAAO,KAAKC,QAAL,GAAgBN,QADJ,CAArB,CAGA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBE,YAAzB,CAAP,CACD,C,uCACQ,iBACP,MACD,+BAAC,sBAAD,WACC,IAAK,eAAK,CACZ,OAAKG,UAAL,CAAkBC,CAAlB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAJE,EAKK,KAAKE,gBAAL,EALL,EAMC,cAND,CAOC,qBACC,KAAKR,KAAL,CAAWS,oBAAX,CAAkC,KAAKT,KAAL,CAAWS,oBAA7C,CAAoEC,mBAAUC,qBARhF,CAUC,sBAAsB,eAVvB,CAWC,SAAU,KAAKX,KAAL,CAAWY,QAAX,CAAsB,KAAtB,CAA8B,IAXzC,kDADC,CAeD,C,sBA/BoBC,gB,EAkCvBhB,SAASiB,SAAT,aACKC,uBAAUD,SADf,EAEEX,MAAOa,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,CAAmBF,oBAAUG,MAA7B,CAAqCH,oBAAUI,KAA/C,CAApB,CAFT,CAGEnB,QAASe,oBAAUG,MAHrB,CAIEE,SAAUL,oBAAUM,IAJtB,CAKEC,UAAWP,oBAAUM,IALvB,GAQA,GAAME,gBAAiB,yCAAa,qBAAb,CAAoC,EAApC,CAAwCC,8BAAxC,EAA8D5B,QAA9D,CAAvB,C,QAE2BA,Q,CAAlB2B,c","file":"Textarea.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TextInput } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport variables from \"../theme/variables/platform\";\r\nimport computeProps from \"../utils/computeProps\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass Textarea extends Component {\r\n  getStyle() {\r\n    return {\r\n      textarea: {\r\n        height: this.props.rowSpan ? this.props.rowSpan * 25 : 60,\r\n      },\r\n    };\r\n  }\r\n\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      style: this.getStyle().textarea,\r\n    };\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n  render() {\r\n    return (\r\n\t\t\t<TextInput\r\n\t\t\t\tref={c => {\r\n  this._textInput = c;\r\n  this._root = c;\r\n}}\r\n\t\t\t\t{...this.prepareRootProps()}\r\n\t\t\t\tmultiline\r\n\t\t\t\tplaceholderTextColor={\r\n\t\t\t\t\tthis.props.placeholderTextColor ? this.props.placeholderTextColor : variables.inputColorPlaceholder\r\n\t\t\t\t}\r\n\t\t\t\tunderlineColorAndroid=\"rgba(0,0,0,0)\"\r\n\t\t\t\teditable={this.props.disabled ? false : true}\r\n\t\t\t/>\r\n    );\r\n  }\r\n}\r\n\r\nTextarea.propTypes = {\r\n  ...TextInput.propTypes,\r\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\r\n  rowSpan: PropTypes.number,\r\n  bordered: PropTypes.bool,\r\n  underline: PropTypes.bool,\r\n};\r\n\r\nconst StyledTextarea = connectStyle(\"NativeBase.Textarea\", {}, mapPropsToStyleNames)(Textarea);\r\n\r\nexport { StyledTextarea as Textarea };\r\n"]}