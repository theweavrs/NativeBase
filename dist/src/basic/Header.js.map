{"version":3,"sources":["../../../src/basic/Header.js"],"names":["Header","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","InsetValues","portrait","landscape","oldHeight","style","height","topInset","topPadder","StyleSheet","flatten","padding","paddingTop","variables","context","theme","platformStyle","layoutChange","e","nativeEvent","layout","androidStatusBarColor","statusBarColor","iosBarStyle","iosStatusbar","transparent","translucent","isIphoneX","_root","c","calculateHeight","calculatePadder","Component","contextTypes","PropTypes","object","propTypes","ViewPropTypes","oneOfType","number","array","searchBar","bool","rounded","StyledHeader","mapPropsToStyleNames"],"mappings":"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","file":"Header.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { View, StatusBar, ViewPropTypes, StyleSheet } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\nimport variable from \"../theme/variables/platform\";\r\nimport _ from \"lodash\";\r\nclass Header extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orientation: \"portrait\"\r\n    };\r\n  }\r\n  layoutChange(val) {\r\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\r\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\r\n    else {\r\n      this.setState({ orientation: \"portrait\" });\r\n    }\r\n  }\r\n  calculateHeight(mode, inSet) {\r\n    let inset = null;\r\n    if (inSet != undefined) {\r\n      inset = inSet;\r\n    } else {\r\n      inset = variable.Inset;\r\n    }\r\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\r\n    let oldHeight = null;\r\n    if (this.props.style.height != undefined) {\r\n      oldHeight = this.props.style.height;\r\n    } else if (this.props.style[1]) {\r\n      oldHeight = this.props.style[1].height ? this.props.style[1].height : this.props.style[0].height;\r\n    } else {\r\n      oldHeight = this.props.style[0].height;\r\n    }\r\n    let height = oldHeight + InsetValues.topInset;\r\n    return height;\r\n  }\r\n  calculatePadder(mode, inSet) {\r\n    let inset = null;\r\n    if (inSet != undefined) {\r\n      inset = inSet;\r\n    } else {\r\n      inset = variable.Inset;\r\n    }\r\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\r\n    let topPadder = null;\r\n    let style = StyleSheet.flatten(this.props.style);\r\n    if (style.padding !== undefined || style.paddingTop !== undefined) {\r\n      topPadder = (style.paddingTop ? style.paddingTop : style.padding) + InsetValues.topInset;\r\n    } else {\r\n      topPadder = InsetValues.topInset;\r\n    }\r\n    return topPadder;\r\n  }\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    return (\r\n      <View onLayout={e => this.layoutChange(e.nativeEvent.layout)}>\r\n        <StatusBar\r\n          backgroundColor={\r\n            this.props.androidStatusBarColor\r\n              ? this.props.androidStatusBarColor\r\n              : variables.statusBarColor\r\n          }\r\n          barStyle={\r\n            this.props.iosBarStyle\r\n              ? this.props.iosBarStyle\r\n              : platformStyle === \"material\"\r\n                ? \"light-content\"\r\n                : variables.iosStatusbar\r\n          }\r\n          translucent={this.props.transparent ? true : this.props.translucent}\r\n        />\r\n        {variables.isIphoneX ? (\r\n          <View\r\n            ref={c => (this._root = c)}\r\n            {...this.props}\r\n            style={[\r\n              this.props.style,\r\n              {\r\n                height: this.calculateHeight(\r\n                  this.state.orientation,\r\n                  variables.Inset\r\n                ),\r\n                paddingTop: this.calculatePadder(\r\n                  this.state.orientation,\r\n                  variables.Inset\r\n                )\r\n              }\r\n            ]}\r\n          />\r\n        ) : (\r\n            <View ref={c => (this._root = c)} {...this.props} />\r\n          )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  searchBar: PropTypes.bool,\r\n  rounded: PropTypes.bool\r\n};\r\n\r\nconst StyledHeader = connectStyle(\r\n  \"NativeBase.Header\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Header);\r\nexport { StyledHeader as Header };"]}