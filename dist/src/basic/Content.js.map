{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","InsetValues","portrait","landscape","leftPadder","style","padding","paddingLeft","leftInset","rightPadder","paddingRight","rightInset","variables","context","theme","isIphoneX","disableKBDismissScroll","x","y","keyboardShouldPersistTaps","_scrollview","c","_root","layoutChange","e","nativeEvent","layout","calculateLeft","calculateRight","padder","contentPadding","contentContainerStyle","children","Component","contextTypes","PropTypes","object","propTypes","oneOfType","number","array","bool","enableResetScrollToCoords","string","StyledContent","mapPropsToStyleNames"],"mappings":"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","file":"Content.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport variable from \"../theme/variables/platform\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass Content extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orientation: \"portrait\"\r\n    };\r\n  }\r\n  layoutChange(val) {\r\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\r\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\r\n    else {\r\n      this.setState({ orientation: \"portrait\" });\r\n    }\r\n  }\r\n\r\n  calculateLeft(mode, inSet) {\r\n    let inset = null;\r\n    if (inSet !== undefined) {\r\n      inset = inSet;\r\n    } else {\r\n      inset = variable.Inset;\r\n    }\r\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\r\n    let leftPadder = null;\r\n    if (this.props.style[1] !== undefined) {\r\n      if (\r\n        this.props.style[1].padding !== undefined ||\r\n        this.props.style[1].paddingLeft !== undefined\r\n      ) {\r\n        leftPadder =\r\n          (this.props.style[1].paddingLeft\r\n            ? this.props.style[1].paddingLeft\r\n            : this.props.style[1].padding) + InsetValues.leftInset;\r\n      }\r\n    } else if (\r\n      this.props.style.padding !== undefined ||\r\n      this.props.style.paddingLeft !== undefined\r\n    ) {\r\n      leftPadder =\r\n        (this.props.style.paddingLeft\r\n          ? this.props.style.paddingLeft\r\n          : this.props.style.padding) + InsetValues.leftInset;\r\n    } else {\r\n      leftPadder = InsetValues.leftInset;\r\n    }\r\n    return leftPadder;\r\n  }\r\n  calculateRight(mode, inSet) {\r\n    let inset = null;\r\n    if (inSet !== undefined) {\r\n      inset = inSet;\r\n    } else {\r\n      inset = variable.Inset;\r\n    }\r\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\r\n    let rightPadder = null;\r\n    if (this.props.style[1] !== undefined) {\r\n      if (\r\n        this.props.style[1].padding !== undefined ||\r\n        this.props.style[1].paddingRight !== undefined\r\n      ) {\r\n        rightPadder =\r\n          (this.props.style[1].paddingRight\r\n            ? this.props.style[1].paddingRight\r\n            : this.props.style[1].padding) + InsetValues.rightInset;\r\n      }\r\n    } else if (\r\n      this.props.style.padding !== undefined ||\r\n      this.props.style.paddingRight !== undefined\r\n    ) {\r\n      rightPadder =\r\n        (this.props.style.paddingRight\r\n          ? this.props.style.paddingRight\r\n          : this.props.style.padding) + InsetValues.rightInset;\r\n    } else {\r\n      rightPadder = InsetValues.rightInset;\r\n    }\r\n    return rightPadder;\r\n  }\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    return variables.isIphoneX ? (\r\n      <KeyboardAwareScrollView\r\n        automaticallyAdjustContentInsets={false}\r\n        resetScrollToCoords={\r\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\r\n        }\r\n        keyboardShouldPersistTaps={\r\n          this.props.keyboardShouldPersistTaps\r\n            ? this.props.keyboardShouldPersistTaps\r\n            : \"handled\"\r\n        }\r\n        ref={c => {\r\n          this._scrollview = c;\r\n          this._root = c;\r\n        }}\r\n        {...this.props}\r\n        onLayout={e => this.layoutChange(e.nativeEvent.layout)}\r\n        style={[\r\n          this.props.style,\r\n          {\r\n            paddingLeft: this.calculateLeft(\r\n              this.state.orientation,\r\n              variables.Inset\r\n            ),\r\n            paddingRight: this.calculateRight(this.state.orientation, variables.Inset)\r\n          }\r\n        ]}\r\n        contentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\r\n      >\r\n        {this.props.children}\r\n      </KeyboardAwareScrollView>\r\n    ) : (\r\n        <KeyboardAwareScrollView\r\n          automaticallyAdjustContentInsets={false}\r\n          resetScrollToCoords={\r\n            this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\r\n          }\r\n          keyboardShouldPersistTaps={\r\n            this.props.keyboardShouldPersistTaps\r\n              ? this.props.keyboardShouldPersistTaps\r\n              : \"handled\"\r\n          }\r\n          ref={c => {\r\n            this._scrollview = c;\r\n            this._root = c;\r\n          }}\r\n          {...this.props}\r\n          contentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\r\n        >\r\n          {this.props.children}\r\n        </KeyboardAwareScrollView>\r\n      );\r\n  }\r\n}\r\n\r\nContent.propTypes = {\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  padder: PropTypes.bool,\r\n  disableKBDismissScroll: PropTypes.bool,\r\n  enableResetScrollToCoords: PropTypes.bool,\r\n  keyboardShouldPersistTaps: PropTypes.string\r\n};\r\n\r\nconst StyledContent = connectStyle(\r\n  \"NativeBase.Content\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Content);\r\n\r\nexport { StyledContent as Content };"]}