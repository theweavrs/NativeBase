{"version":3,"sources":["../../../src/basic/ListItem.js"],"names":["ListItem","variables","context","theme","variable","Platform","OS","androidRipple","props","onPress","onLongPress","Version","_root","c","listBtnUnderlayColor","touchableHighlightStyle","undefined","children","marginLeft","paddingLeft","Component","contextTypes","PropTypes","object","propTypes","TouchableHighlight","style","oneOfType","number","array","itemDivider","bool","button","StyledListItem","mapPropsToStyleNames"],"mappings":"61BAAA,4B,2CACA,qC,mDACA,yCAOA,iEACA,mE,yEACA,qD,q7BAEMA,S,yRAIK,iBACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,kBAFJ,CAIA,GACEC,sBAASC,EAAT,GAAgB,KAAhB,EACAD,sBAASC,EAAT,GAAgB,KADhB,EAEAL,UAAUM,aAAV,GAA4B,KAF5B,EAGC,CAAC,KAAKC,KAAL,CAAWC,OAAZ,EAAuB,CAAC,KAAKD,KAAL,CAAWE,WAHpC,EAIAL,sBAASM,OAAT,EAAoB,EALtB,CAME,CACA,MACE,+BAAC,+BAAD,WACE,QAAS,KAAKH,KAAL,CAAWC,OADtB,CAEE,YAAa,KAAKD,KAAL,CAAWE,WAF1B,CAGE,IAAK,sBAAM,QAAKE,KAAL,CAAaC,CAAnB,EAHP,CAIE,cAAeZ,UAAUa,oBAJ3B,EAKM,KAAKN,KALX,EAME,MAAO,KAAKA,KAAL,CAAWO,uBANpB,kDAQE,8BAAC,iBAAD,aAAU,KAAKP,KAAf,EAAsB,OAAQQ,SAA9B,kDAA0C,KAAKR,KAAL,CAAWS,QAArD,CARF,CADF,CAYD,CAnBD,IAmBO,CACL,MACE,+BAAC,oCAAD,WACE,IAAK,sBAAM,QAAKL,KAAL,CAAaC,CAAnB,EADP,EAEM,KAAKL,KAFX,mDAIE,8BAAC,iBAAD,EAAM,MAAO,CAAEU,WAAY,CAAC,EAAf,CAAmBC,YAAa,EAAhC,CAAb,iDACE,8BAAC,iBAAD,aAAU,KAAKX,KAAf,EAAsB,OAAQQ,SAA9B,kDAA0C,KAAKR,KAAL,CAAWS,QAArD,CADF,CAJF,CADF,CAUD,CACF,C,sBAxCoBG,gB,EAAjBpB,Q,CACGqB,Y,CAAe,CACpBlB,MAAOmB,oBAAUC,MADG,C,CA0CxBvB,SAASwB,SAAT,aACKC,gCAAmBD,SADxB,EAEEE,MAAOJ,oBAAUK,SAAV,CAAoB,CACzBL,oBAAUC,MADe,CAEzBD,oBAAUM,MAFe,CAGzBN,oBAAUO,KAHe,CAApB,CAFT,CAOEd,wBAAyBO,oBAAUK,SAAV,CAAoB,CAC3CL,oBAAUC,MADiC,CAE3CD,oBAAUO,KAFiC,CAApB,CAP3B,CAWEC,YAAaR,oBAAUS,IAXzB,CAYEC,OAAQV,oBAAUS,IAZpB,GAeA,GAAME,gBAAiB,yCACrB,qBADqB,CAErB,EAFqB,CAGrBC,8BAHqB,EAIrBlC,QAJqB,CAAvB,C,QAM2BA,Q,CAAlBiC,c","file":"ListItem.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  TouchableHighlight,\r\n  Platform,\r\n  TouchableNativeFeedback,\r\n  View\r\n} from \"react-native\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\nimport variable from \"../theme/variables/platform\";\r\n\r\nclass ListItem extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n\r\n    if (\r\n      Platform.OS === \"ios\" ||\r\n      Platform.OS === \"web\" ||\r\n      variables.androidRipple === false ||\r\n      (!this.props.onPress && !this.props.onLongPress) ||\r\n      Platform.Version <= 21\r\n    ) {\r\n      return (\r\n        <TouchableHighlight\r\n          onPress={this.props.onPress}\r\n          onLongPress={this.props.onLongPress}\r\n          ref={c => (this._root = c)}\r\n          underlayColor={variables.listBtnUnderlayColor}\r\n          {...this.props}\r\n          style={this.props.touchableHighlightStyle}\r\n        >\r\n          <View {...this.props} testID={undefined}>{this.props.children}</View>\r\n        </TouchableHighlight>\r\n      );\r\n    } else {\r\n      return (\r\n        <TouchableNativeFeedback\r\n          ref={c => (this._root = c)}\r\n          {...this.props}\r\n        >\r\n          <View style={{ marginLeft: -17, paddingLeft: 17 }}>\r\n            <View {...this.props} testID={undefined}>{this.props.children}</View>\r\n          </View>\r\n        </TouchableNativeFeedback>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nListItem.propTypes = {\r\n  ...TouchableHighlight.propTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  touchableHighlightStyle: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.array\r\n  ]),\r\n  itemDivider: PropTypes.bool,\r\n  button: PropTypes.bool\r\n};\r\n\r\nconst StyledListItem = connectStyle(\r\n  \"NativeBase.ListItem\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(ListItem);\r\n\r\nexport { StyledListItem as ListItem };\r\n"]}